# Manifest files are an easy way for you to setup your application in
# Continuum. All app create options can be specified to make deployment
# a breeze.

# App (and package) name
# Default: None
name: "example-ruby-manifest"

# Namespace to which the app belongs
# Default: Current Namespace
namespace: "/dev/test"

# Number of app instances to start on creation
# Default: 1
instances: 1

# Staging pipeline to use when staging the app
# Default: Auto-detect
staging_pipeline: "/apcera::ruby"

# Path to the app. If unset, APC will prompt
# Default: Current working dir
#path: "/path/to/app"

# Command to start the app. If unset, the stager will attempt to
# auto-detect the command based on the framework used.
start_cmd: "bundle exec rackup config.ru -p $PORT"

# Resources allocated to the app.
# CPU calculated in ms/s, default uncapped
# Disk default: 1024MB
# Memory default: 256MB
# Network default: 5Mbps
resources {
  disk_space: "768MB"
  memory: "256MB"
  network_bandwidth: "10Mbps"
}

# Ports exposed on the job. These may be optional if the job is not listening on
# the port number specified. Routes may be added per-port. Routes have types
# corresponding to the router that picks them up. Currently supported are types
# of 'tcp' and 'http'. Route weight determines how much traffic is delivered
# to each route, between 0.0 and 100.0.
# Defaults: port 0 exposed with an http route of "<app-name>.<domain>"
ports: [
  {
    number: 0,
    routes: [
      {
        type: "http",
        endpoint: "example-ruby-manifest.apcera.me",
      }
    ]
  }
]

# Boolean for disabling routes, useful for non-webapps
# Default: false
disable_routes: false

# App Environment Variables; ENV names must be quoted
# Default: None
env {
  "ENV_NAME": "env value"
  "ANOTHER_ENV": "secondary value"
}

# Services to create and bind to the app.
# Providers must be registered prior to app creation.
# Default: none
#services [
#  {
#    provider_name: "postgres",
#    type: "postgres",
#    service_name: "mydb1",
#  },
#  {
#    provider_name: "postgres",
#    type: "postgres",
#    service_name: "mydb2",
#  }
#]

# Services to create and bind to stagers. Ephemeral unless given a name,
# and exist only during the named stager's lifetime.
# Default: none
#stager_options [
#  { stager_name: "ruby-rspec",
#    services [
#      {
#        provider_name: "postgres",
#        type: "postgres",
#        service_name: "pgdb123",
#      },
#    ]
#  }
#]

# Timeout in seconds, allocated for app startup time (before timing out)
# Default: 5 seconds
timeout: 10

# Start: boolean that determines if the app should start upon creation
# Default: false
start: true

# Set of template files to evaluate. The options available are:
# path: The path to the template
# left_delimiter: string to use for left delimiter
# right_delimiter: string to use for right delimiter
templates: [
  {
    path: "app.rb"
  },
]
